"""your_migration_description

Revision ID: cdbf8fc6bb6e
Revises: clean_baseline
Create Date: 2025-07-25 15:08:50.274761

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'cdbf8fc6bb6e'
down_revision: Union[str, Sequence[str], None] = 'clean_baseline'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Drop foreign key constraints if they exist
    try:
        op.drop_constraint(op.f('groups_project_id_fkey'), 'groups', type_='foreignkey')
    except:
        pass  # Constraint might not exist
    
    op.create_foreign_key(None, 'groups', 'projects', ['project_id'], ['id'])
    
    # Drop index if it exists (production might not have it)
    try:
        op.drop_index(op.f('ix_requirements_requirement_id_project_id'), table_name='requirements')
    except:
        pass  # Index might not exist in production
    
    op.create_index(op.f('ix_requirements_requirement_id'), 'requirements', ['requirement_id'], unique=False)
    
    # Drop foreign key constraints if they exist
    try:
        op.drop_constraint(op.f('requirements_project_id_fkey'), 'requirements', type_='foreignkey')
    except:
        pass  # Constraint might not exist
    
    op.create_foreign_key(None, 'requirements', 'projects', ['project_id'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Drop foreign key constraints if they exist
    try:
        op.drop_constraint(None, 'requirements', type_='foreignkey')
    except:
        pass  # Constraint might not exist
    
    op.create_foreign_key(op.f('requirements_project_id_fkey'), 'requirements', 'projects', ['project_id'], ['id'], ondelete='CASCADE')
    
    # Drop index if it exists
    try:
        op.drop_index(op.f('ix_requirements_requirement_id'), table_name='requirements')
    except:
        pass  # Index might not exist
    
    op.create_index(op.f('ix_requirements_requirement_id_project_id'), 'requirements', ['requirement_id', 'project_id'], unique=True)
    
    # Drop foreign key constraints if they exist
    try:
        op.drop_constraint(None, 'groups', type_='foreignkey')
    except:
        pass  # Constraint might not exist
    
    op.create_foreign_key(op.f('groups_project_id_fkey'), 'groups', 'projects', ['project_id'], ['id'], ondelete='CASCADE')
    # ### end Alembic commands ###
